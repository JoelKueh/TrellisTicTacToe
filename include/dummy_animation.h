
#ifndef DUMMY_ANIMATION_H
#define DUMMY_ANIMATION_H

#include "scene.h"
#include "blue_trellis.h"

#include <chrono>
using namespace std::chrono;

class dummy_animation : public scene {
public:
	dummy_animation(blue_trellis *bt);
	virtual void update();
	virtual bool is_done();
	virtual ~dummy_animation();
private:
	blue_trellis *bt;
	high_resolution_clock::time_point *start_time;
	high_resolution_clock::time_point *last_time;
	bool last_frame;

	void consume_button_presses();

	uint8_t frames[2][16][3] = {
	{
		{ 0xF0, 0x00, 0x00 },
		{ 0xE0, 0x10, 0x00 },
		{ 0xD0, 0x20, 0x00 },
		{ 0xC0, 0x30, 0x00 },
		{ 0xB0, 0x40, 0x00 },
		{ 0xA0, 0x50, 0x00 },
		{ 0x90, 0x60, 0x00 },
		{ 0x80, 0x70, 0x00 },
		{ 0x70, 0x80, 0x00 },
		{ 0x60, 0x90, 0x00 },
		{ 0x50, 0xA0, 0x00 },
		{ 0x40, 0xB0, 0x00 },
		{ 0x30, 0xC0, 0x00 },
		{ 0x20, 0xD0, 0x00 },
		{ 0x10, 0xE0, 0x00 },
		{ 0x00, 0xF0, 0x00 }
	},
	{
		{ 0x00, 0xF0, 0x00 },
		{ 0x10, 0xE0, 0x00 },
		{ 0x20, 0xD0, 0x00 },
		{ 0x30, 0xC0, 0x00 },
		{ 0x40, 0xB0, 0x00 },
		{ 0x50, 0xA0, 0x00 },
		{ 0x60, 0x90, 0x00 },
		{ 0x70, 0x80, 0x00 },
		{ 0x80, 0x70, 0x00 },
		{ 0x90, 0x60, 0x00 },
		{ 0xA0, 0x50, 0x00 },
		{ 0xB0, 0x40, 0x00 },
		{ 0xC0, 0x30, 0x00 },
		{ 0xD0, 0x20, 0x00 },
		{ 0xE0, 0x10, 0x00 },
		{ 0xF0, 0x00, 0x00 }
	}};
};

#endif /* DUMMY_ANIMATION_H */
